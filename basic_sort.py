# -*- coding: utf-8 -*-
"""Basic_sort.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uywafqFfn8bc6CLi9gzJcbI0hewnzB1z
"""

def selection_sort(array):
  for border in range(0, len(array)-1):
    smallest = border
    for pointer in range(border+1, len(array)):
      if array[pointer] < array[smallest]:
        smallest = pointer
      
    temp = array[border]
    array[border] = array[smallest]
    array[smallest] = temp
    
  return array

def bubble_sort(array):
  for i in range(0, len(array)-1):
    for j in range(0, len(array)-(i+1)):
      if array[j] > array[j+1]:
        temp = array[j]
        array[j] = array[j+1]
        array[j+1] = temp
  
  return array

def insertion_sort(array):
  for i in range(1, len(array)):    # i is the border for dividing the sorted part with the unsorted part
      sorted_tail = i-1
      insert_element = i
      while array[sorted_tail] > array[insert_element] and sorted_tail >=0:
        temp = array[sorted_tail]
        array[sorted_tail] = array[insert_element]
        array[insert_element] = temp
        sorted_tail -= 1
        insert_element -= 1
        
  return array

unordered = [64, 25, 12, 22, 11]

ordered = selection_sort(unordered.copy())
print("[selection sort result]")
print(ordered)

ordered = bubble_sort(unordered.copy())
print("[bubble sort result]")
ordered

ordered = insertion_sort(unordered.copy())
print("[insertion sort result]")
ordered